// Generated by CoffeeScript 1.12.4
var Either, Kind, Maybe, mutable;

mutable = require("Property").mutable;

Either = require("Either");

Maybe = require("Maybe");

Kind = require("Kind");

module.exports = {
  isRequired: {
    get: function() {
      return {
        type: this,
        required: true
      };
    }
  },
  withDefault: function(value) {
    return {
      type: this,
      "default": value
    };
  },
  or: function() {
    var arg, i, len, value;
    value = Either(this);
    for (i = 0, len = arguments.length; i < len; i++) {
      arg = arguments[i];
      value.types.push(arg);
    }
    return value;
  },
  Maybe: {
    get: function() {
      var value;
      value = Maybe(this);
      mutable.define(this, "Maybe", {
        get: function() {
          return value;
        },
        enumerable: false
      });
      return value;
    }
  },
  Kind: {
    get: function() {
      var value;
      value = Kind(this);
      mutable.define(this, "Kind", {
        get: function() {
          return value;
        },
        enumerable: false
      });
      return value;
    }
  }
};
